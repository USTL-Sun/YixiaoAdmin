<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ assembly name="$(SolutionDir)\YixiaoAdmin.Models\bin\Debug\netstandard2.0\YixiaoAdmin.Models.dll" #>
<#@ import namespace="YixiaoAdmin.Models" #>
<#@ output extension=".cs" #>
<#@include file="$(SolutionDir)\packages\MultipleOutputHelper.ttinclude"#> 

<#
    //var OutputPath1 = Path.GetDirectoryName(Host.TemplateFile)+"\\work";
    var OutputPath1 = Path.GetDirectoryName(Host.TemplateFile);
    if (!Directory.Exists(OutputPath1))
    {
        Directory.CreateDirectory(OutputPath1);
    }
    var manager = new Manager(Host, GenerationEnvironment, true) { OutputPath = OutputPath1 }; 
    var assembly = typeof(IEntity).Assembly.GetTypes().AsEnumerable()
        .Where(x => typeof(IEntity).IsAssignableFrom(x) && !x.IsAbstract && !x.IsInterface).ToList();
    foreach(var type in assembly)
    {
        // 定义输出文件
	    manager.StartBlock(type.Name+"Controller.cs");
#>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using YixiaoAdmin.IServices;
using YixiaoAdmin.Models;
using YixiaoAdmin.Common;

//这是 <#=type.Name #> 控制器

namespace YixiaoAdmin.WebApi.Controllers
{
    [Route("[controller]")]
    [ApiController]
    public class <#=type.Name #>Controller : ControllerBase
    {
        private readonly I<#=type.Name #>Services _<#=type.Name #>Services;


        public <#=type.Name #>Controller(I<#=type.Name #>Services <#=type.Name #>Services)
        {
            _<#=type.Name #>Services = <#=type.Name #>Services ?? 
                                       throw new ArgumentNullException(nameof(<#=type.Name #>Services));
        }

        /// <summary>
        /// 查询所有数据
        /// </summary>
        /// <returns></returns>
        [HttpGet("[action]")]
        public async Task<IList<<#=type.Name #>>> All()
        {
            return await _<#=type.Name #>Services.Query();
        }
        /// <summary>
        /// 查询分页数据
        /// </summary>
        /// <param name="queryPageModel">查询模型</param>
        /// <returns></returns>
        [HttpPost("[action]")]
        public async Task<ActionResult<IEnumerable<<#=type.Name #>>>> Pages(QueryPageModel queryPageModel)
        {
            return Ok(await _<#=type.Name #>Services.QueryPages(queryPageModel));
        }
        /// <summary>
        /// 查找
        /// </summary>
        /// <returns></returns>
        [HttpGet]
        public async Task<<#=type.Name #>> Get(string Id)
        {
            return await _<#=type.Name #>Services.QueryById(Id);
        }
        /// <summary>
        /// 添加
        /// </summary>
        /// <returns></returns>
        [HttpPost]
        public async Task<bool> Post(<#=type.Name #> viewModel)
        {

            return await _<#=type.Name #>Services.Add(viewModel);
        }
        /// <summary>
        /// 修改
        /// </summary>
        /// <returns></returns>
        [HttpPut]
        public async Task<bool> Put(<#=type.Name #> viewModel)
        {
            return await _<#=type.Name #>Services.Update(viewModel);
        }
        /// <summary>
        /// 删除
        /// </summary>
        /// <returns></returns>
        [HttpDelete]
        public async Task<bool> Delete(string Id)
        {
            return await _<#=type.Name #>Services.RemoveById(Id);
        }
    }
}
<#
     // 结束输出文件
    manager.EndBlock();
    } 
    // 执行编译
    manager.Process(true);  

#>
